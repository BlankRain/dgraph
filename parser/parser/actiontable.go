// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			shift(2), /* { */
			nil,      /* } */
			nil,      /* label */
			nil,      /* as */
			nil,      /* (func: */
			nil,      /* ( */
			nil,      /* )) */
			nil,      /* (from: */
			nil,      /* , */
			nil,      /* to: */
			nil,      /* ) */
			nil,      /* empty */
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          /* INVALID */
			accept(true), /* $ */
			nil,          /* { */
			nil,          /* } */
			nil,          /* label */
			nil,          /* as */
			nil,          /* (func: */
			nil,          /* ( */
			nil,          /* )) */
			nil,          /* (from: */
			nil,          /* , */
			nil,          /* to: */
			nil,          /* ) */
			nil,          /* empty */
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* { */
			nil,      /* } */
			shift(5), /* label */
			nil,      /* as */
			nil,      /* (func: */
			nil,      /* ( */
			nil,      /* )) */
			nil,      /* (from: */
			nil,      /* , */
			nil,      /* to: */
			nil,      /* ) */
			nil,      /* empty */
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* { */
			shift(6), /* } */
			shift(5), /* label */
			nil,      /* as */
			nil,      /* (func: */
			nil,      /* ( */
			nil,      /* )) */
			nil,      /* (from: */
			nil,      /* , */
			nil,      /* to: */
			nil,      /* ) */
			nil,      /* empty */
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			reduce(2), /* }, reduce: QueryList */
			reduce(2), /* label, reduce: QueryList */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			shift(9),  /* as */
			shift(11), /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			shift(12), /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(1), /* $, reduce: QueryStmt */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			reduce(3), /* }, reduce: QueryList */
			reduce(3), /* label, reduce: QueryList */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			reduce(4), /* }, reduce: Query */
			reduce(4), /* label, reduce: Query */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(13), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			shift(14), /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(16), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(17), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			shift(11), /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			shift(12), /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(19), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			reduce(6), /* }, reduce: Function */
			reduce(6), /* label, reduce: Function */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			shift(22), /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			shift(23), /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			reduce(5), /* }, reduce: Query */
			reduce(5), /* label, reduce: Query */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* { */
			reduce(14), /* }, reduce: InnerQuery */
			reduce(14), /* label, reduce: InnerQuery */
			nil,        /* as */
			nil,        /* (func: */
			nil,        /* ( */
			nil,        /* )) */
			nil,        /* (from: */
			nil,        /* , */
			nil,        /* to: */
			nil,        /* ) */
			nil,        /* empty */
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			shift(24), /* } */
			shift(19), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* { */
			reduce(12), /* }, reduce: InnerQueryList */
			reduce(12), /* label, reduce: InnerQueryList */
			nil,        /* as */
			nil,        /* (func: */
			nil,        /* ( */
			nil,        /* )) */
			nil,        /* (from: */
			nil,        /* , */
			nil,        /* to: */
			nil,        /* ) */
			nil,        /* empty */
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(26), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			shift(27), /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* { */
			reduce(11), /* }, reduce: FuncBody */
			reduce(11), /* label, reduce: FuncBody */
			nil,        /* as */
			nil,        /* (func: */
			nil,        /* ( */
			nil,        /* )) */
			nil,        /* (from: */
			nil,        /* , */
			nil,        /* to: */
			nil,        /* ) */
			nil,        /* empty */
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* { */
			reduce(13), /* }, reduce: InnerQueryList */
			reduce(13), /* label, reduce: InnerQueryList */
			nil,        /* as */
			nil,        /* (func: */
			nil,        /* ( */
			nil,        /* )) */
			nil,        /* (from: */
			nil,        /* , */
			nil,        /* to: */
			nil,        /* ) */
			nil,        /* empty */
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			shift(28), /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			shift(29), /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			reduce(7), /* {, reduce: FuncHead */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* { */
			nil,        /* } */
			shift(30),  /* label */
			nil,        /* as */
			nil,        /* (func: */
			nil,        /* ( */
			nil,        /* )) */
			nil,        /* (from: */
			nil,        /* , */
			nil,        /* to: */
			reduce(10), /* ), reduce: ShortestPathOptArgs */
			nil,        /* empty */
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			reduce(9), /* ), reduce: ShortestPathOptArgs */
			nil,       /* empty */
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* { */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			shift(32), /* ) */
			nil,       /* empty */
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			reduce(8), /* {, reduce: FuncHead */
			nil,       /* } */
			nil,       /* label */
			nil,       /* as */
			nil,       /* (func: */
			nil,       /* ( */
			nil,       /* )) */
			nil,       /* (from: */
			nil,       /* , */
			nil,       /* to: */
			nil,       /* ) */
			nil,       /* empty */
		},
	},
}
